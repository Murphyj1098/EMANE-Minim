#!/bin/bash -

top_dir=$1
node_name=$2
start_time=$3

echo "top_dir: $top_dir"
echo "node_name: $node_name"
echo "start_time: $start_time"

cd "$top_dir/$node_name"

# load startup functions
. ./functions

# Run node-prestart script
if [ -f ./node-prestart ]
then
    bash ./node-prestart $node_name
fi

# EMANE application
if [ -f platform.xml ]
then
    start_emane \
        $node_name \
        platform.xml \
        $top_dir/persist/$node_name/var/log/emane.log \
        $top_dir/persist/$node_name/var/run/emane.pid \
        $top_dir/persist/$node_name/var/run/emane.uuid
fi

# EMANE Spectrum Monitor Utility
if [ -f emane-spectrum-monitor.xml ]
then
    start_emane_spectrum_monitor \
        $node_name \
        emane-spectrum-monitor.xml \
        $top_dir/persist/$node_name/var/log/emane-spectrum-monitor.log \
        $top_dir/persist/$node_name/var/run/emane-spectrum-monitor.pid \
        $top_dir/persist/$node_name/var/run/emane-spectrum-monitor.uuid
fi

# EMANE Transport Daemon
if [ -f transportdaemon.xml ]
then
    start_emanetransportd \
        $node_name \
        transportdaemon.xml \
        $top_dir/persist/$node_name/var/log/emanetransportd.log \
        $top_dir/persist/$node_name/var/run/emanetransportd.pid \
        $top_dir/persist/$node_name/var/run/emanetransportd.uuid
fi

# Wait for waveform interface to come up
% if waveform_interface:
    wait_for_device $node_name ${waveform_interface} 30
% else:
    sleep 4
% endif

# Event Daemon
if [ -f eventdaemon.xml ]
then
    start_emaneeventd_and_wait_for_gpspty \
        $node_name \
        eventdaemon.xml \
        $top_dir/persist/$node_name/var/log/emaneeventd.log \
        $top_dir/persist/$node_name/var/run/emaneeventd.pid \
        $top_dir/persist/$node_name/var/run/emaneeventd.uuid \
        $top_dir/persist/$node_name/var/run/gps.pty

    start_gpsd \
        $node_name \
        $top_dir/persist/$node_name/var/run/gps.pty \
        $top_dir/persist/$node_name/var/run/gpsd.pid
fi

# OLSRD or BATMAN
# OLSRD
if [ -f olsr.conf ]
then
    start_olsr \
        $node_name \
        olsr.conf \
        $top_dir/persist/$node_name/var/log/olsr.log

    wait_for_device $node_name bmf0 30
fi

# BATMAN-adv
if [ -f batman-adv ]
then
    bash ./batman-adv $node_name

    wait_for_device $node_name ${batman_interface} 30
fi

# OTestPoint-Recorder
if [ -f otestpoint-recorder.xml ]
then
    start_otestpoint_recorder \
        $node_name \
        otestpoint-recorder.xml \
        $top_dir/persist/$node_name/var/log/otestpoint-recorder.log \
        $top_dir/persist/$node_name/var/run/otestpoint-recorder.pid \
        $top_dir/persist/$node_name/var/run/otestpoint-recorder.uuid
fi

# OTestPoint Daemon
if [ -f otestpoint.xml ]
then
    start_otestpointd \
        $node_name \
        otestpoint.xml \
        $top_dir/persist/$node_name/var/log/otestpointd.log \
        $top_dir/persist/$node_name/var/run/otestpointd.pid \
        $top_dir/persist/$node_name/var/run/otestpointd.uuid
fi

# Multi-Generator (MGEN) Network Test Tool
if [ -f mgen ]
then
    start_mgen \
        $node_name \
        mgen \
        $top_dir/persist/$node_name/var/log/mgen.out \
        $top_dir/persist/$node_name/var/run/mgen.pid \
        $top_dir/persist/$node_name/var/log/mgen.log \
        "$start_time"
fi

# iPerf
if [ -f iperf ]
then
    start_iperf \
        $node_name \
        iperf \
        $top_dir/persist/$node_name/var/log/iperf.log \
        $top_dir/persist/$node_name/var/run/iperf.pid \
        "$start_time"
fi

# Run node-poststart script
if [ -f ./node-poststart ]
then
    bash ./node-poststart $node_name
fi